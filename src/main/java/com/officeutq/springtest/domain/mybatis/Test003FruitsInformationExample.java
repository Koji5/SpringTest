package com.officeutq.springtest.domain.mybatis;

import java.util.ArrayList;
import java.util.List;

public class Test003FruitsInformationExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public Test003FruitsInformationExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andFruitsIdIsNull() {
			addCriterion("fruits_id is null");
			return (Criteria) this;
		}

		public Criteria andFruitsIdIsNotNull() {
			addCriterion("fruits_id is not null");
			return (Criteria) this;
		}

		public Criteria andFruitsIdEqualTo(String value) {
			addCriterion("fruits_id =", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdNotEqualTo(String value) {
			addCriterion("fruits_id <>", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdGreaterThan(String value) {
			addCriterion("fruits_id >", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdGreaterThanOrEqualTo(String value) {
			addCriterion("fruits_id >=", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdLessThan(String value) {
			addCriterion("fruits_id <", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdLessThanOrEqualTo(String value) {
			addCriterion("fruits_id <=", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdLike(String value) {
			addCriterion("fruits_id like", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdNotLike(String value) {
			addCriterion("fruits_id not like", value, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdIn(List<String> values) {
			addCriterion("fruits_id in", values, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdNotIn(List<String> values) {
			addCriterion("fruits_id not in", values, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdBetween(String value1, String value2) {
			addCriterion("fruits_id between", value1, value2, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsIdNotBetween(String value1, String value2) {
			addCriterion("fruits_id not between", value1, value2, "fruitsId");
			return (Criteria) this;
		}

		public Criteria andFruitsNameIsNull() {
			addCriterion("fruits_name is null");
			return (Criteria) this;
		}

		public Criteria andFruitsNameIsNotNull() {
			addCriterion("fruits_name is not null");
			return (Criteria) this;
		}

		public Criteria andFruitsNameEqualTo(String value) {
			addCriterion("fruits_name =", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameNotEqualTo(String value) {
			addCriterion("fruits_name <>", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameGreaterThan(String value) {
			addCriterion("fruits_name >", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameGreaterThanOrEqualTo(String value) {
			addCriterion("fruits_name >=", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameLessThan(String value) {
			addCriterion("fruits_name <", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameLessThanOrEqualTo(String value) {
			addCriterion("fruits_name <=", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameLike(String value) {
			addCriterion("fruits_name like", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameNotLike(String value) {
			addCriterion("fruits_name not like", value, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameIn(List<String> values) {
			addCriterion("fruits_name in", values, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameNotIn(List<String> values) {
			addCriterion("fruits_name not in", values, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameBetween(String value1, String value2) {
			addCriterion("fruits_name between", value1, value2, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsNameNotBetween(String value1, String value2) {
			addCriterion("fruits_name not between", value1, value2, "fruitsName");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceIsNull() {
			addCriterion("fruits_price is null");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceIsNotNull() {
			addCriterion("fruits_price is not null");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceEqualTo(Integer value) {
			addCriterion("fruits_price =", value, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceNotEqualTo(Integer value) {
			addCriterion("fruits_price <>", value, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceGreaterThan(Integer value) {
			addCriterion("fruits_price >", value, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceGreaterThanOrEqualTo(Integer value) {
			addCriterion("fruits_price >=", value, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceLessThan(Integer value) {
			addCriterion("fruits_price <", value, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceLessThanOrEqualTo(Integer value) {
			addCriterion("fruits_price <=", value, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceIn(List<Integer> values) {
			addCriterion("fruits_price in", values, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceNotIn(List<Integer> values) {
			addCriterion("fruits_price not in", values, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceBetween(Integer value1, Integer value2) {
			addCriterion("fruits_price between", value1, value2, "fruitsPrice");
			return (Criteria) this;
		}

		public Criteria andFruitsPriceNotBetween(Integer value1, Integer value2) {
			addCriterion("fruits_price not between", value1, value2, "fruitsPrice");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table test003_fruits_information
	 * @mbg.generated  Fri Apr 16 22:12:27 JST 2021
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table test003_fruits_information
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 11 01:19:30 JST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}